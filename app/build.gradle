apply plugin: 'com.android.application'
apply from: '../config/quality.gradle'

def config = rootProject.ext.android

def librarys = rootProject.ext.supportDependencies

android {
    compileSdkVersion config.compileSdkVersion
    buildToolsVersion config.buildToolsVersion

    defaultConfig {
        applicationId "coder.prettygirls"
        minSdkVersion config.minSdkVersion
        targetSdkVersion config.targetSdkVersion
        versionCode config.versionCode
        versionName config.versionName

        buildConfigField "String", "API_BASE_URL", "\"http://gank.io/\""
    }

    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'LICENSE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/services/javax.annotation.processing.Processor'
        exclude 'META-INF/rxjava.properties'
    }

    signingConfigs {
        try {
            release {
                storeFile file("../keys/prettygirls.jks")
                storePassword project.hasProperty("KEYSTORE_PASS") ? KEYSTORE_PASS : System.getenv("KEYSTORE_PASS")
                keyAlias project.hasProperty("ALIAS_NAME") ? ALIAS_NAME : System.getenv("ALIAS_NAME")
                keyPassword project.hasProperty("ALIAS_PASS") ? ALIAS_PASS : System.getenv("ALIAS_PASS")
            }
        } catch (ex) {
            throw new Exception("You should define KEYSTORE_PASSWORD and KEY_PASSWORD in local.properties.")
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            debuggable true
        }

        release {
            debuggable false
            signingConfig signingConfigs.release
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    lintOptions {
        abortOnError false
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'

    compile librarys.supportAppcompat
    compile librarys.suppoutDesign
    compile librarys.cardView
    compile librarys.palette

    compile librarys.butterKnife
    annotationProcessor librarys.butterKnifeComp

    compile librarys.easyRecyclerView

    compile librarys.glideTrans

    compile librarys.okhttp
    compile librarys.retrofit
    compile librarys.retrofitConverter
    compile librarys.retrofitAdapter

    compile librarys.rxAndroid
    compile librarys.rxJava

    compile project(':mylibrary')
}
